Input: nums = [1,2,3,1]
Output: 2
Explanation: 3 is a peak element and your function should return the index number 2.

Solution---

class Solution {
    public int findPeakElement(int[] nums) {
        int n=nums.length;

        if(n==1) return 0;

        for(int i=0 ; i< n ; i++)
        {
            if(i==0 && nums[i]>nums[i+1])
            {
                return i;
            }
            if(i==n-1 && nums[i]> nums[i-1]) return i;
            else{
                if(nums[i] > nums[i+1] && nums[i] > nums[i-1])
                {
                    return i;
                }
            }
        }
        return -1;
    }
}

solution---
class Solution {
    public int findPeakElement(int[] nums) {
        int n = nums.length;
        int left = 1 , right = n-2;

        if(n==1) return 0;
        if(nums[0]> nums[1]) return 0;
        if(nums[n-1] > nums[n-2]) return n-1;
        while(left <= right)
        {  
            int mid = ( left + right )/2;
            if(nums[mid]> nums[mid+1] && nums[mid]> nums[mid-1])
            {
                return mid;
            }
            if(nums[mid] > nums[mid-1]){
            left = mid+1;
            }
            else{
                right = mid-1;
            }
        }
        return -1;
    }
}
